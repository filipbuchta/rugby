{"version":3,"sources":["Sprite.js","Camera.js","Ball.js","math.js","Player.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Sprite","spriteSheet","Object","classCallCheck","this","direction","delta","currentAnimation","timer","frame","firstFrame","frameCount","loop","ctx","sourceX","image","width","frameSize","sourceY","height","save","scale","drawImage","restore","name","animations","Camera","Ball","targetX","targetY","velocityZ","throwStrength","velocityX","x","velocityY","y","length","Math","sqrt","rotationSpeed","lastPlayer","player","sound","currentTime","play","fieldWidth","fieldHeight","z","HOLDING_HEIGHT","angle","PI","ballWidth","ballHeight","ballDampening","normalize","v","l","pow","distance","a","b","areNear","maxDistance","Player","movementX","movementY","speed","maxSpeed","gotoTarget","obj","acceleration","min","max","sprite","playAnimation","update","quote","quoteTime","draw","translate","font","strokeStyle","lineWidth","strokeText","fillStyle","fillText","TACKLE_DISTANCE","Game","canvas","_this3","keys","lastKeys","selectedTeam","random","window","addEventListener","event","keyCode","context","getContext","assets","Audio","volume","Promise","all","loadImage","loadJson","then","onAssetsLoaded","assetName","_this","resolve","reject","asset","Image","onerror","ev","console","error","onload","src","complete","_this2","request","XMLHttpRequest","open","Error","message","onreadystatechange","readyState","status","JSON","parse","responseText","e","SyntaxError","send","playSound","stringify","score","startLevel","tick","bind","requestAnimationFrame","gameEnd","players","team","playerNum","index","role","push","ball","selectedPlayer","camera","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","now","lastTick","_this4","kick","passTo","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","sort","i","setQuote","goto","log","winningArea","myTeam","filter","p","_iterator2","j","tackle","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","winQuotes","winnersThrow","setTimeout","slice","p1","p2","dir","tauntQuotes","tackleDrop","fromPlayer","toPlayer","throw","setTransform","clearRect","clientWidth","clientHeight","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","beginPath","ellipse","stroke","size","fill","rotate","soundName","App","props","possibleConstructorReturn","getPrototypeOf","call","game","react_default","createElement","style","textAlign","ref","imageRendering","margin","display","color","Component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9b11371c.chunk.js","sourcesContent":["\r\nexport default class Sprite {\r\n\r\n    constructor(spriteSheet) {\r\n        this.spriteSheet = spriteSheet;\r\n        this.direction = false;\r\n    }\r\n\r\n\r\n    update(delta) {\r\n        if (this.currentAnimation == null) {\r\n            return;\r\n        }\r\n\r\n\r\n        this.timer += delta;\r\n        if (this.timer > 50) {\r\n            this.timer = 0;\r\n\r\n            this.frame++;\r\n            if (this.frame >= this.currentAnimation.firstFrame + this.currentAnimation.frameCount) {\r\n                if (this.currentAnimation.loop) {\r\n                    this.frame = this.currentAnimation.firstFrame;\r\n                } else {\r\n                    this.frame = this.currentAnimation.firstFrame + this.currentAnimation.frameCount - 1;\r\n\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    draw(ctx) {\r\n        let animation = this.currentAnimation;\r\n\r\n        let sourceX = ((this.frame % (this.spriteSheet.image.width / this.spriteSheet.frameSize.width)) | 0) * this.spriteSheet.frameSize.width;\r\n        let sourceY = ((this.frame / (this.spriteSheet.image.width / this.spriteSheet.frameSize.width)) | 0) * this.spriteSheet.frameSize.height;\r\n\r\n        if (this.direction) {\r\n            ctx.save();\r\n            //ctx.translate(this.spriteSheet.frameSize.width / 32, 0);\r\n            ctx.scale(-1, 1);\r\n        }\r\n\r\n        ctx.drawImage(this.spriteSheet.image,\r\n            sourceX, sourceY, this.spriteSheet.frameSize.width, this.spriteSheet.frameSize.height,\r\n            - this.spriteSheet.frameSize.width / 2, - this.spriteSheet.frameSize.height, this.spriteSheet.frameSize.width, this.spriteSheet.frameSize.height);\r\n        if (this.direction) {\r\n            ctx.restore();\r\n        }\r\n    }\r\n\r\n    playAnimation(name) {\r\n        if (this.currentAnimation != this.spriteSheet.animations[name]) {\r\n            this.timer = 0;\r\n            this.currentAnimation = this.spriteSheet.animations[name];\r\n            this.frame = this.currentAnimation.firstFrame;\r\n        }\r\n    }\r\n}","export default class Camera {\r\n    x;\r\n    y;\r\n}","\r\n\r\nexport default class Ball {\r\n    x;\r\n    y;\r\n    z;\r\n    velocityX;\r\n    velocityY;\r\n    velocityZ;\r\n\r\n    rotationSpeed;\r\n    angle;\r\n\r\n    player;\r\n\r\n    sound;\r\n\r\n    static ballWidth = 13;\r\n    static ballHeight = 9;\r\n    static ballDampening = 0.6;\r\n    static HOLDING_HEIGHT = 10;\r\n\r\n\r\n    throw(targetX, targetY, velocityZ, throwStrength) {\r\n        let velocityX = targetX - this.x;\r\n        let velocityY = targetY - this.y;\r\n\r\n        let length = Math.sqrt(velocityX * velocityX + velocityY * velocityY);\r\n\r\n\r\n        this.velocityX = (velocityX / length) * throwStrength;\r\n        this.velocityY = (velocityY / length) * throwStrength;\r\n        this.velocityZ = (velocityZ) * throwStrength;\r\n\r\n        this.rotationSpeed = 1 / 50;\r\n\r\n        this.lastPlayer = this.player;\r\n        this.player = null;\r\n\r\n        this.sound.currentTime = 0;\r\n        this.sound.play();\r\n\r\n    }\r\n\r\n\r\n    update(delta, fieldWidth, fieldHeight) {\r\n\r\n        if (this.player != null) {\r\n            this.x = this.player.x + (this.player.direction ? 5 : -5);\r\n            this.z = Ball.HOLDING_HEIGHT;\r\n            this.y = this.player.y;\r\n            this.velocityX = this.player.velocityX;\r\n            this.velocityY = this.player.velocityY;\r\n            this.angle = Math.PI / 4 * (this.player.direction ? -1 : 1);\r\n        }\r\n        else {\r\n            this.velocityZ -= 1 / 400 * delta; // gravity;\r\n\r\n            this.x += this.velocityX * delta;\r\n            this.y += this.velocityY * delta;\r\n            this.z += this.velocityZ * delta;\r\n            if (this.x < Ball.ballWidth) {\r\n                this.x = Ball.ballWidth;\r\n            }\r\n            if (this.y < Ball.ballHeight) {\r\n                this.y = Ball.ballHeight;\r\n            }\r\n\r\n            if (this.x > fieldWidth - Ball.ballWidth) {\r\n                this.x = fieldWidth - Ball.ballWidth;\r\n            }\r\n            if (this.y > fieldHeight - Ball.ballHeight) {\r\n                this.y = fieldHeight - Ball.ballHeight;\r\n            }\r\n\r\n            if (this.z < 0) {\r\n                this.z = 0;\r\n\r\n\r\n                this.velocityX *= Ball.ballDampening;\r\n                this.velocityY *= Ball.ballDampening;\r\n                this.velocityZ *= Ball.ballDampening;\r\n\r\n                this.rotationSpeed *= Ball.ballDampening;\r\n\r\n                this.velocityZ *= -1;\r\n\r\n            }\r\n\r\n\r\n            this.angle += this.rotationSpeed * delta;\r\n\r\n        }\r\n    }\r\n}\r\n","\r\nexport function length(v) {\r\n    return Math.sqrt(Math.pow(v.x, 2) + Math.pow(v.y, 2));\r\n\r\n}\r\n\r\nexport function normalize(v) {\r\n    let l = length(v);\r\n    return {x: v.x / l, y: v.y / l};\r\n}\r\n\r\nexport function distance(a, b) {\r\n    return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\r\n}\r\n\r\nexport function areNear(a, b, maxDistance) {\r\n    return distance(a, b) < maxDistance;\r\n}\r\n","import {areNear} from \"./math\";\r\n\r\nexport default class Player {\r\n\r\n    x;\r\n    y;\r\n    velocityX;\r\n    velocityY;\r\n    direction;\r\n    sprite;\r\n    team;\r\n    gotoTarget;\r\n    movementX;\r\n    movementY;\r\n    quote;\r\n    quoteTime;\r\n\r\n    speed;\r\n    maxSpeed;\r\n\r\n    static TACKLE_DISTANCE = 20;\r\n\r\n    constructor() {\r\n        this.velocityX = 0;\r\n        this.velocityY = 0;\r\n        this.movementX = 0;\r\n        this.movementY = 0;\r\n\r\n        this.speed = 1 / 750;\r\n        this.maxSpeed = 0.14;\r\n        this.gotoTarget = null;\r\n    }\r\n\r\n    goto(obj) {\r\n        this.gotoTarget = obj;\r\n    }\r\n\r\n    update(delta, fieldWidth, fieldHeight) {\r\n\r\n\r\n\r\n        if (this.gotoTarget != null) {\r\n            this.movementX = this.x > this.gotoTarget.x ? -1 : 1;\r\n            this.movementY = this.y > this.gotoTarget.y ? -1 : 1;\r\n\r\n            if (areNear(this, this.gotoTarget, 8)) {\r\n                this.movementX = 0;\r\n                this.movementY = 0;\r\n\r\n                this.gotoTarget = null;\r\n            }\r\n        }\r\n\r\n\r\n\r\n        let acceleration = this.speed * delta;\r\n\r\n        let damping = 0.6;\r\n        if (this.movementX === 0) {\r\n            this.velocityX *= damping;\r\n        } else {\r\n            this.velocityX += (this.movementX > 0 ? acceleration : -acceleration);\r\n            this.velocityX = Math.min(this.maxSpeed, Math.max(-this.maxSpeed, this.velocityX));\r\n        }\r\n        if (this.movementY === 0) {\r\n            this.velocityY *= damping;\r\n        } else {\r\n            this.velocityY += (this.movementY > 0 ? acceleration : -acceleration);\r\n            this.velocityY = Math.min(this.maxSpeed, Math.max(-this.maxSpeed, this.velocityY));\r\n        }\r\n\r\n        if (this.velocityX < 0.001 && this.velocityX > -0.001) {\r\n            this.velocityX = 0;\r\n        }\r\n\r\n        if (this.velocityY < 0.001 && this.velocityY > -0.001) {\r\n            this.velocityY = 0;\r\n        }\r\n\r\n        this.x += this.velocityX * delta;\r\n        this.y += this.velocityY * delta;\r\n\r\n\r\n\r\n\r\n        if (this.x < 0) {\r\n            this.x = 0;\r\n        }\r\n        if (this.y < 0) {\r\n            this.y = 0;\r\n        }\r\n\r\n        if (this.x > fieldWidth) {\r\n            this.x = fieldWidth;\r\n        }\r\n        if (this.y > fieldHeight) {\r\n            this.y = fieldHeight;\r\n        }\r\n\r\n        //console.log(this.x, this.velocityX, this.y, this.velocityY);\r\n        if (this.velocityX > 0) {\r\n            this.direction = true;\r\n        } else if (this.velocityX < 0) {\r\n            this.direction = false;\r\n        }\r\n\r\n        if (this.velocityY > 0 || this.velocityY < 0 || this.velocityX > 0 || this.velocityX < 0) {\r\n            this.sprite.playAnimation(\"run\");\r\n        } else {\r\n            this.sprite.playAnimation(\"idle\");\r\n        }\r\n\r\n        this.sprite.direction = this.direction;\r\n\r\n        this.sprite.update(delta);\r\n\r\n        if (this.quote != null) {\r\n\r\n            this.quoteTime -= delta;\r\n\r\n            if (this.quoteTime < 0) {\r\n                this.quote = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    setQuote(quote) {\r\n        this.quote = quote;\r\n        this.quoteTime = 5000;\r\n    }\r\n\r\n    draw(ctx) {\r\n        this.sprite.draw(ctx);\r\n\r\n        if (this.quote != null) {\r\n\r\n            ctx.translate(-5 - this.quote.length, -32);\r\n            ctx.font = \"6px 'Press Start 2P'\";\r\n            ctx.strokeStyle = 'black';\r\n            ctx.lineWidth = 3;\r\n            ctx.strokeText(this.quote,0,0);\r\n            ctx.fillStyle = 'white';\r\n            ctx.fillText(this.quote,0,0);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n","import Sprite from \"./Sprite\";\r\nimport Camera from \"./Camera\";\r\nimport Ball from \"./Ball\";\r\nimport Player from \"./Player\";\r\nimport {distance, areNear, normalize} from \"./math\";\r\n\r\nexport const MAX_HEIGHT = 800;\r\nexport const winningArea = 40;\r\n\r\n\r\nexport default class Game {\r\n\r\n\r\n    loadImage(assetName) {\r\n        return new Promise((resolve, reject) => {\r\n            var asset = new Image();\r\n            asset.onerror = (ev) => {\r\n                console.error(\"Unable to load image\", assetName, ev);\r\n                reject(ev.error);\r\n            };\r\n            asset.onload = (ev) => {\r\n                this.assets[assetName] = asset;\r\n                resolve(asset);\r\n            };\r\n            asset.src = \"assets/\" + assetName;\r\n            if (asset.complete) {\r\n                this.assets[assetName] = asset;\r\n                resolve(asset);\r\n            }\r\n        });\r\n    }\r\n\r\n    loadJson(assetName) {\r\n        return new Promise((resolve, reject) => {\r\n            var request = new XMLHttpRequest();\r\n            request.open(\"GET\", \"assets/\" + assetName, true);\r\n            request.onerror = (ev) => {\r\n                reject(new Error(\"JSON request failed: \" + ev.message));\r\n            };\r\n\r\n            request.onreadystatechange = (ev) => {\r\n                if (request.readyState == 4) {\r\n                    if (request.status == 200) {\r\n                        let asset;\r\n                        try {\r\n                            asset = JSON.parse(request.responseText);\r\n                        } catch (e) {\r\n                            if (e instanceof SyntaxError) {\r\n                                reject(new Error(\"Invalid JSON content\", e));\r\n                            }\r\n\r\n                            throw e;\r\n                        }\r\n                        this.assets[assetName] = asset;\r\n                        resolve(asset);\r\n                    } else if (request.status == 404) {\r\n                        reject(new Error(\"JSON Asset not found\"));\r\n                    }\r\n                }\r\n            };\r\n            request.send();\r\n        });\r\n    }\r\n\r\n    constructor(canvas) {\r\n        Game.keys = [];\r\n        Game.lastKeys = [];\r\n\r\n        this.selectedTeam = (Math.random() * 2) | 0;\r\n\r\n        this.canvas = canvas;\r\n        window.addEventListener('keydown', (event) => {\r\n            if (!Game.keys[event.keyCode]) {\r\n                Game.keys[event.keyCode] = true;\r\n                ;\r\n            }\r\n\r\n        }, true);\r\n        window.addEventListener('keyup', (event) => {\r\n\r\n            if (Game.keys[event.keyCode]) {\r\n                Game.keys[event.keyCode] = false;\r\n\r\n            }\r\n        }, true);\r\n\r\n        this.context = this.canvas.getContext('2d');\r\n\r\n        this.assets = {};\r\n        this.assets[\"song.mp3\"] = new Audio(\"assets/song.mp3\");\r\n        this.assets[\"song.mp3\"].volume = 0.75;\r\n        this.assets[\"blob.mp3\"] = new Audio(\"assets/blob.mp3\");\r\n        this.assets[\"win.mp3\"] = new Audio(\"assets/win.mp3\");\r\n\r\n\r\n        Promise.all([\r\n            this.loadImage(\"lawyer.png\"),\r\n            this.loadImage(\"ball.png\"),\r\n            this.loadImage(\"doctor.png\"),\r\n            this.loadImage(\"field.png\"),\r\n            this.loadJson(\"playerSprite.json\")\r\n        ]).then(() => this.onAssetsLoaded());\r\n    }\r\n\r\n\r\n    onAssetsLoaded() {\r\n        this.playSound(\"song.mp3\");\r\n\r\n        this.assets[\"doctorSprite.json\"] = JSON.parse(JSON.stringify(this.assets[\"playerSprite.json\"]));\r\n\r\n        this.assets[\"playerSprite.json\"].image = this.assets[\"lawyer.png\"];\r\n        this.assets[\"doctorSprite.json\"].image = this.assets[\"doctor.png\"];\r\n\r\n\r\n        this.score = [0, 0];\r\n\r\n        this.startLevel();\r\n\r\n\r\n        this.delta = 0;\r\n        this.tick = this.tick.bind(this);\r\n        requestAnimationFrame(this.tick);\r\n\r\n    }\r\n\r\n    startLevel() {\r\n        this.gameEnd = false;\r\n\r\n        this.players = [];\r\n        for (let team = 0; team < 2; team++) {\r\n            for (let playerNum = 0; playerNum < 3; playerNum++) {\r\n                let player = new Player();\r\n                player.index = this.players.length;\r\n                player.sprite = new Sprite(this.assets[team === 0 ? \"playerSprite.json\" : \"doctorSprite.json\"]);\r\n                player.team = team;\r\n                player.x = 130 + (team) * 250 + ((team === 0 ? -1 : 1) * (playerNum % 2) * 30);\r\n                // player.x = 250 + (team) * 5 + ((team === 0 ? 1 : -1) * (playerNum % 2) * 30);\r\n                player.y = 60 + (playerNum + 1) * 40;\r\n                // player.y = 100 + (playerNum + 1) * 40;\r\n                player.direction = (team === 0);\r\n                if (playerNum === 1) {\r\n                    player.role = \"defender\";\r\n                } else {\r\n                    player.role = \"attacker\";\r\n                }\r\n                this.players.push(player);\r\n            }\r\n        }\r\n        this.ball = new Ball();\r\n        this.ball.sound = this.assets[\"blob.mp3\"];\r\n        this.ball.x = this.assets[\"field.png\"].width / 2;\r\n        this.ball.y = this.assets[\"field.png\"].height / 2;\r\n        // this.ballZ = MAX_HEIGHT - 40;\r\n        this.ball.z = 0;\r\n        this.ball.velocityX = 0;\r\n        this.ball.velocityY = 0;\r\n        this.ball.velocityZ = 0;\r\n        this.ball.rotationSpeed = 0;\r\n        this.ball.angle = 0;\r\n\r\n        this.selectedPlayer = this.players[(this.selectedTeam * (this.players.length / 2) + (Math.random() * this.players.length / 2)) | 0];\r\n        this.selectedPlayer.maxSpeed *= 1.2;\r\n        Game.camera = new Camera();\r\n\r\n\r\n        this.timer = 0;\r\n\r\n\r\n        if (!window[\"debug\"]) {\r\n            if (this.score[0] > 2 || this.score[1] > 2) {\r\n\r\n                for (let player of this.players) {\r\n                    player.team = this.selectedPlayer.team;\r\n                    player.role = \"ending\";\r\n                }\r\n\r\n                this.selectedPlayer = null;\r\n\r\n            }\r\n        }\r\n\r\n\r\n\r\n        Game.keys = [];\r\n    }\r\n\r\n    tick(now) {\r\n        requestAnimationFrame(this.tick);\r\n        if (this.lastTick == null) {\r\n            this.lastTick = now;\r\n        }\r\n        let timestep = 1000 / 60;\r\n\r\n        this.delta += now - this.lastTick;\r\n        this.lastTick = now;\r\n\r\n        while (this.delta >= timestep) {\r\n            this.update(timestep);\r\n            this.delta -= timestep;\r\n        }\r\n        this.draw();\r\n    }\r\n\r\n    update(delta) {\r\n\r\n        delta *= 1 / 2;\r\n\r\n\r\n        // update players\r\n        let fieldWidth = this.assets[\"field.png\"].width;\r\n        let fieldHeight = this.assets[\"field.png\"].height;\r\n\r\n\r\n        if (this.selectedPlayer != null) {\r\n            if (Game.keys[32]) {\r\n                if (this.ball.player === this.selectedPlayer) {\r\n\r\n                    if ((this.selectedPlayer.direction && this.selectedPlayer.team === 0) || (!this.selectedPlayer.direction && this.selectedPlayer.team === 1)) {\r\n                        this.kick();\r\n                    } else {\r\n\r\n\r\n                            this.passTo(this.selectedPlayer)\r\n\r\n\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            if (Game.keys[39]) {\r\n                this.selectedPlayer.movementX = 1;\r\n            } else if (Game.keys[37]) {\r\n                this.selectedPlayer.movementX = -1;\r\n            } else {\r\n                this.selectedPlayer.movementX = 0;\r\n            }\r\n\r\n            if (Game.keys[40]) {\r\n                this.selectedPlayer.movementY = 1;\r\n            } else if (Game.keys[38]) {\r\n                this.selectedPlayer.movementY = -1;\r\n            } else {\r\n                this.selectedPlayer.movementY = 0;\r\n            }\r\n        }\r\n\r\n        for (let player of this.players) {\r\n;\r\n            if (player === this.selectedPlayer) {\r\n\r\n            } else { // AI\r\n                // player.velocityX = Math.random();\r\n                if (player.role === \"ending\") {\r\n\r\n                    this.players.sort((a, b) => a.index - b.index);\r\n\r\n                    for (let i = 0; i < this.players.length; i++) {\r\n                        this.players[i].gotoTarget = {x: i * (fieldWidth / 6) + 32, y: fieldHeight / 2};\r\n                    }\r\n\r\n                    this.players[0].setQuote(\"Pujdes\");\r\n                    this.players[1].setQuote(\"se\");\r\n                    this.players[2].setQuote(\"mnou\");\r\n                    this.players[3].setQuote(\"na\");\r\n                    this.players[4].setQuote(\"veceri\");\r\n                    this.players[5].setQuote(\"?\");\r\n\r\n                } else if (player.role === \"attacker\") {\r\n                    if (player === this.ball.player) { // if i have the ball\r\n                        player.goto({x: player.team === 0 ? fieldWidth : 0, y: player.y + (Math.random() * 32) - 16}); // run to goal\r\n\r\n                        if (Math.random() > 0.9995) {\r\n                            player.direction = player.team === 1;\r\n                            this.passTo(player)\r\n                        }\r\n\r\n                    } else if (this.ball.player != null) { // if someone else has the ball\r\n\r\n                        if (this.ball.player.team === player.team) { // is it someone from my team?\r\n\r\n                        } else { // is it someone from different teamteam?\r\n                            player.goto(this.ball.player); //\r\n                        }\r\n\r\n                    } else { // no one has the ball\r\n                        player.goto(this.ball);\r\n                    }\r\n\r\n                } else if (player.role === \"defender\") {\r\n\r\n                    // i have a ball\r\n                    if (player === this.ball.player) {\r\n                        if ((player.team === 0 && player.x > fieldWidth / 2 - 32) || (player.team === 1 && player.x < fieldWidth / 2 + 32)) { // at the end of our field\r\n                            console.log(\"kick\");\r\n                            player.direction = player.team === 0;\r\n                            this.kick(); // kick ball\r\n                        } else {\r\n                            player.goto({x: fieldWidth / 2, y: fieldHeight / 2}); // run to the middle\r\n                        }\r\n                    } else {\r\n\r\n\r\n                        const prediction = 1000;\r\n                        // console.log(this.ballVelocityY);\r\n\r\n                        player.goto({\r\n                            x: player.team === 0 ? (winningArea + 45) : (fieldWidth - winningArea - 45),\r\n                            y: this.ball.y + this.ball.velocityY * prediction\r\n                        });\r\n\r\n                        if ((player.team === 0 && this.ball.x < fieldWidth / 2) || (player.team === 1 && this.ball.x > fieldWidth / 2)) { // is the ball on our field?\r\n\r\n                            if (this.ball.player == null) { // no one has the ball\r\n                                // if i am nearest to ball, run to the ball, else run to the base\r\n\r\n                                let myTeam = this.players.filter(p => p.team === player.team);\r\n                                myTeam.sort((a, b) => distance(this.ball, a) - distance(this.ball, b));\r\n                                if (myTeam[0] === player) {\r\n                                    player.goto(this.ball);\r\n                                }\r\n                            } else if (this.ball.player.team !== player.team) { // enemy has the ball\r\n                                player.goto(this.ball.player);\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n\r\n\r\n            player.update(delta, fieldWidth, fieldHeight);\r\n\r\n\r\n            //   Game.camera.x = -player.x + this.canvas.clientWidth / 2 + player.spriteSheet.frameSize.width / 2;\r\n            // Game.camera.y = 0;\r\n\r\n//        Game.camera.x = Game.camera.x.clamp(-(this.map.map.width * 32 - this.canvas.clientWidth), 0);\r\n\r\n\r\n        }\r\n\r\n        // resolve player collisions\r\n        for (let i = 0; i < this.players.length; i++) {\r\n            for (let j = i + 1; j < this.players.length; j++) {\r\n\r\n                if (this.players[i].team !== this.players[j].team && areNear(this.players[i], this.players[j], Player.TACKLE_DISTANCE)) {\r\n                    this.tackle(this.players[i], this.players[j]);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n        // ball collision\r\n        if (this.ball.player == null) {\r\n            for (let player of this.players) {\r\n                if (player.x > this.ball.x - Ball.ballWidth && player.x < this.ball.x + Ball.ballWidth &&\r\n                    player.y > this.ball.y - Ball.ballHeight && player.y < this.ball.y + Ball.ballHeight &&\r\n                    this.ball.x > winningArea && this.ball.x < fieldWidth - winningArea &&\r\n                    this.ball.z < Ball.HOLDING_HEIGHT) {\r\n\r\n                    this.ball.player = player;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!this.gameEnd) {\r\n            if (((this.ball.x < winningArea) || (this.ball.x > fieldWidth - winningArea))) {\r\n\r\n                if (this.ball.player == null) {\r\n\r\n                    this.ball.lastPlayer.setQuote(\"Faul\");\r\n                }\r\n                else if ((this.ball.x < winningArea && this.ball.player.team === 0) || ((this.ball.x > fieldWidth - winningArea) && this.ball.player.team ===1)) {\r\n                    this.ball.player.setQuote(\"Faul\");\r\n                } else {\r\n\r\n                    for (let player of this.players.filter(p => p.team === this.ball.player.team)) {\r\n                        const winQuotes = [\"Hooray!\", \"Yes!\", \"Yeah!!\"];\r\n\r\n                        player.setQuote(winQuotes[(Math.random() * winQuotes.length) | 0]);\r\n\r\n                    }\r\n\r\n                    this.playSound(\"win.mp3\");\r\n                    this.score[this.ball.player.team]++;\r\n                    this.winnersThrow();\r\n                }\r\n\r\n                setTimeout(() => this.startLevel(), 3000);\r\n\r\n\r\n                this.gameEnd = true;\r\n            }\r\n        }\r\n\r\n\r\n        // update ball\r\n        this.ball.update(delta, fieldWidth, fieldHeight);\r\n\r\n        this.players.sort((a, b) => a.y - b.y);\r\n\r\n\r\n        Game.lastKeys = Game.keys.slice();\r\n    }\r\n\r\n\r\n    tackle(p1, p2) {\r\n        const tackleStrength = 1.0;\r\n        let dir = {x: p1.x - p2.x, y: p1.y - p2.y};\r\n        dir = normalize(dir);\r\n        dir.x *= tackleStrength * Math.random() * 2;\r\n        dir.y *= tackleStrength * Math.random() * 2;\r\n        p1.velocityX = dir.x;\r\n        p1.velocityY = dir.y;\r\n        p2.velocityX = dir.x * -1;\r\n        p2.velocityY = dir.y * -1;\r\n\r\n\r\n        if (this.ball.player === p1 || this.ball.player === p2) {\r\n\r\n            if (Math.random() > 0.1) {\r\n                const tauntQuotes = [\"Hey!\", \"!!!\", \"Ugh!\"];\r\n\r\n                if (Math.random() > 0.8) {\r\n                    this.ball.player.setQuote(tauntQuotes[(Math.random() * tauntQuotes.length) | 0]);\r\n                }\r\n\r\n                this.tackleDrop();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    passTo(fromPlayer) {\r\n        let toPlayer = this.players\r\n            .filter((p) => fromPlayer.team === p.team && ((fromPlayer.team === 0 && p.x < fromPlayer.x) || (fromPlayer.team === 1 && p.x > fromPlayer.x)))\r\n            .sort((p) => fromPlayer.team === 1 ? p.x - fromPlayer.x : fromPlayer.x - p.x)[0];\r\n\r\n        if (toPlayer != null) {\r\n\r\n            this.ball.throw(toPlayer.x, toPlayer.y, 1, 0.3);\r\n        }\r\n    }\r\n\r\n    tackleDrop() {\r\n        this.ball.throw(this.ball.x + 0.00001 * (Math.random() * 2 - 1), this.ball.y + 0.00001 * (Math.random() * 2 - 1), 1, 0.2);\r\n    }\r\n\r\n    kick() {\r\n        this.ball.throw(this.ball.x + 2 * (this.ball.player.team === 0 ? 1 : -1), this.ball.y + (Math.random() * 2 - 1), 2, 0.2);\r\n    }\r\n\r\n    winnersThrow() {\r\n        this.ball.throw(this.ball.x + 1 * (this.ball.player.team === 0 ? 1 : -1), this.ball.y, -2, 0.2);\r\n    }\r\n\r\n    draw() {\r\n        let ctx = this.context;\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n        ctx.clearRect(0, 0, this.canvas.clientWidth, this.canvas.clientHeight);\r\n\r\n\r\n        // ctx.setTransform(1, 0, 0, 1, Game.camera.x, Game.camera.y);\r\n        ctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\r\n        ctx.save();\r\n        ctx.translate(0, 100); // shift ui\r\n\r\n\r\n        ctx.drawImage(this.assets[\"field.png\"], 0, 0);\r\n\r\n\r\n        for (let player of this.players) {\r\n            ctx.save();\r\n            ctx.translate(player.x | 0, player.y | 0);\r\n\r\n\r\n            if (this.selectedPlayer === player) {\r\n                ctx.strokeStyle = \"#CC4444\";\r\n                ctx.beginPath();\r\n                ctx.ellipse(0, -1, 12, 4, 0, 0, 2 * Math.PI);\r\n                ctx.stroke();\r\n            }\r\n\r\n            player.draw(ctx);\r\n\r\n\r\n            ctx.restore();\r\n        }\r\n\r\n\r\n        // draw ball\r\n        ctx.save();\r\n\r\n        ctx.translate(this.ball.x | 0, (this.ball.y | 0));\r\n\r\n\r\n        let size = (MAX_HEIGHT - this.ball.z) / MAX_HEIGHT;\r\n\r\n        ctx.strokeStyle = \"black\";\r\n        ctx.fillStyle = \"black\";\r\n        ctx.beginPath();\r\n        ctx.ellipse(0, 0, 5 * size, 2 * size, 0, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        ctx.translate(0, -2)\r\n\r\n\r\n        ctx.translate(0, -(this.ball.z | 0));\r\n\r\n        ctx.rotate(this.ball.angle);\r\n        ctx.translate(-this.assets[\"ball.png\"].width / 2, -this.assets[\"ball.png\"].width / 2)\r\n        ctx.drawImage(this.assets[\"ball.png\"], 0, 0);\r\n\r\n\r\n        ctx.restore();\r\n\r\n\r\n\r\n\r\n        // draw ui\r\n        ctx.restore();\r\n\r\n\r\n        ctx.save();\r\n        ctx.strokeStyle = \"white\";\r\n        ctx.fillStyle = \"white\";\r\n        ctx.font = \"24px 'Press Start 2P'\";\r\n\r\n        ctx.fillText(\"LAWYERS vs DOCTORS\", 60, 50);\r\n\r\n        ctx.fillText(this.score[0], 130, 90);\r\n        ctx.fillText(this.score[1], this.canvas.width - 140, 90);\r\n\r\n        ctx.restore();\r\n\r\n    }\r\n\r\n\r\n    playSound(soundName) {\r\n\r\n        let sound = this.assets[soundName];\r\n        sound.currentTime = 0;\r\n        sound.play();\r\n    }\r\n}\r\n","import React, {Component} from 'react';\nimport Game from \"./Game\";\n\nclass App extends Component {\n\n    canvas;\n    game;\n\n    constructor(props) {\n        super(props);\n    }\n\n\n    componentDidMount() {\n        this.game = new Game(this.canvas);\n    }\n\n\n    render() {\n        return (\n            <div style={{textAlign: \"center\"}}>\n                <canvas ref={(ref) => this.canvas = ref} width=\"512\" height=\"384\"\n                        style={{\n                            imageRendering: \"pixelated\",\n                            margin: \"auto\",\n                            display: \"inline-block\",\n                        }}/>\n\n                <p style={{color:\"darkgray\"}}>Arrow keys to move, space to throw</p>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}